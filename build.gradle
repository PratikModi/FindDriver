group 'Go-Jeck'
version '1.0'

apply plugin: 'java'
apply(plugin: "application");
apply(plugin: "com.github.johnrengelman.shadow");

sourceCompatibility = JavaVersion.VERSION_1_8

mainClassName = "com.gojek.FindDriverApplication"

project.ext{
    dropwizardVersion='1.0.5'
    jarLocation= 'E://jar//'
    configLocation= 'E://config//'

}

buildscript {
    repositories {
        mavenCentral();
        jcenter();
    }
    dependencies {
        classpath(group: "com.github.jengelman.gradle.plugins",
                name:"shadow", version:"1.2.3");
    }
}
repositories {
    mavenCentral();
}
dependencies {
    //Drop wizard

    compile "io.dropwizard:dropwizard-core:"+dropwizardVersion
    compile "io.dropwizard:dropwizard-assets:"+dropwizardVersion

    compile "org.glassfish.jersey.ext:jersey-declarative-linking:2.25"

    //Swagger

    compile "com.smoketurner:dropwizard-swagger:1.0.5-4"

    //guice

    compile "com.google.inject:guice:4.1.0"

    testCompile group: 'junit', name: 'junit', version: '4.11'

}

shadowJar.dependsOn 'test'
test.dependsOn 'cleanTest'

shadowJar {

    mergeServiceFiles();

    from sourceSets.main.output.classesDir

    archiveName = rootProject.name.toLowerCase()+".jar"

    manifest{
        attributes "Implementation-Title": "FindDriver"
        attributes "Implementation-Version": rootProject.version
        attributes "Main-Class": mainClassName
        attributes "Built-Date": new Date()
        attributes "Built-By": System.getProperty('user.name')
        attributes "Build-Jdk": System.getProperty('java.version')
    }
}

artifacts{
    archives shadowJar
}

tasks['shadowJar'].finalizedBy 'copyArtifacts'

jar.enabled = false

task('copyArtifacts')<< {
    copy {
        from 'build/libs/' + rootProject.name.toLowerCase() + ".jar"
        into jarLocation
    }
    copy{
        from 'src/main/configuration/find-driver.yml'
        into configLocation
    }
}


